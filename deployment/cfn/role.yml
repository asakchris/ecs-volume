AWSTemplateFormatVersion: '2010-09-09'
Description: This stack creates all required security groups
Parameters:
  Environment:
    Type: String
    Description: Environment Name (DEV)
    AllowedValues: [ 'DEV' ]
  Platform:
    Type: String
    Default: 'IDS'
    Description: Platform Name
  S3StackName:
    Type: String
    Description: Name of the stack which is used to create S3 buckets
Resources:
  ECSTaskExecutionRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${Platform}-ECS-TASK-EXEC-ROLE-01'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy'
  ECSTaskRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${Platform}-ECS-TASK-ROLE-02'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess'
  ECSTaskBackupRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${Platform}-ECS-TASK-BACKUP-ROLE-03'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ ecs-tasks.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      ManagedPolicyArns:
        - 'arn:aws:iam::aws:policy/AmazonS3ReadOnlyAccess'
      Policies:
        - PolicyName: !Sub '${Environment}-${Platform}-ECS-TASK-BACKUP-ROLE-POLICY-01'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 's3:PutObject'
                  - 's3:DeleteObject'
                Resource:
                  - Fn::ImportValue: !Join [ ':', [ !Ref 'S3StackName', 'BackupBucketArn' ] ]
  ECSEventRole:
    Type: AWS::IAM::Role
    Properties:
      RoleName: !Sub '${Environment}-${Platform}-ECS-EVENT-ROLE-04'
      AssumeRolePolicyDocument:
        Statement:
          - Effect: Allow
            Principal:
              Service: [ events.amazonaws.com ]
            Action: [ 'sts:AssumeRole' ]
      Path: /
      Policies:
        - PolicyName: !Sub '${Environment}-${Platform}-ECS-EVENT-ROLE-POLICY-02'
          PolicyDocument:
            Statement:
              - Effect: Allow
                Action:
                  - 'ecs:RunTask'
                Resource:
                  - '*'
Outputs:
  ECSTaskExecutionRole:
    Description: ARN of ECS task execution role
    Value: !GetAtt 'ECSTaskExecutionRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ECSTaskExecutionRoleArn' ] ]
  ECSTaskRole:
    Description: ARN of ECS task role
    Value: !GetAtt 'ECSTaskRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ECSTaskRoleArn' ] ]
  ECSTaskBackupRole:
    Description: ARN of ECS task backup role
    Value: !GetAtt 'ECSTaskBackupRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ECSTaskBackupRoleArn' ] ]
  ECSEventRole:
    Description: ARN of ECS Event role
    Value: !GetAtt 'ECSEventRole.Arn'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'ECSEventRoleArn' ] ]
