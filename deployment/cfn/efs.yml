AWSTemplateFormatVersion: '2010-09-09'
Description: This stack creates all required security groups
Parameters:
  Environment:
    Type: String
    Description: Environment Name (DEV)
    AllowedValues: [ 'DEV' ]
  Platform:
    Type: String
    Default: 'IDS'
    Description: Platform Name
  VpcStackName:
    Type: String
    Description: Name of the stack which is used to create VPC and Subnets
  SecurityGroupStackName:
    Type: String
    Description: Name of the stack which is used to create security groups
  RoleStackName:
    Type: String
    Description: Name of the stack which is used to create IAM Roles
Resources:
  FileSystem:
    Type: AWS::EFS::FileSystem
    Properties:
      PerformanceMode: generalPurpose
      ThroughputMode: bursting
      FileSystemPolicy:
        Version: '2012-10-17'
        Statement:
          - Effect: 'Allow'
            Action:
              - 'elasticfilesystem:ClientMount'
              - 'elasticfilesystem:ClientWrite'
            Principal:
              AWS:
                Fn::ImportValue: !Join [ ':', [ !Ref 'RoleStackName', 'ECSTaskRoleArn' ] ]
                #Condition:
                #StringEquals:
                #'elasticfilesystem:AccessPointArn': !GetAtt 'AccessPointResource.Arn'
      FileSystemTags:
        - Key: Name
          Value: !Sub '${Environment}-${Platform}-EFS-VOLUME-01'
  MountTargetSubnetOne:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SubnetId:
        Fn::ImportValue: !Join [ ':', [ !Ref 'VpcStackName', 'PrivateSubnetOne' ] ]
      SecurityGroups:
        - Fn::ImportValue: !Join [ ':', [ !Ref 'SecurityGroupStackName', 'EfsSecurityGroupId' ] ]
  MountTargetSubnetTwo:
    Type: AWS::EFS::MountTarget
    Properties:
      FileSystemId: !Ref 'FileSystem'
      SubnetId:
        Fn::ImportValue: !Join [ ':', [ !Ref 'VpcStackName', 'PrivateSubnetTwo' ] ]
      SecurityGroups:
        - Fn::ImportValue: !Join [ ':', [ !Ref 'SecurityGroupStackName', 'EfsSecurityGroupId' ] ]
  AccessPointResource:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref FileSystem
      PosixUser:
        Uid: '1000'
        Gid: '1000'
        SecondaryGids:
          - '1001'
          - '1002'
      RootDirectory:
        Path: '/scheduler'
        CreationInfo:
          OwnerGid: '1000'
          OwnerUid: '1000'
          Permissions: '774'
      AccessPointTags:
        - Key: Name
          Value: !Sub '${Environment}-${Platform}-EFS-ACCESS-POINT-01'
  AccessPointResourceBackup:
    Type: AWS::EFS::AccessPoint
    Properties:
      FileSystemId: !Ref FileSystem
      PosixUser:
        Uid: '1000'
        Gid: '1000'
        SecondaryGids:
          - '1001'
          - '1002'
      RootDirectory:
        Path: '/backup'
        CreationInfo:
          OwnerGid: '1000'
          OwnerUid: '1000'
          Permissions: '774'
      AccessPointTags:
        - Key: Name
          Value: !Sub '${Environment}-${Platform}-EFS-ACCESS-POINT-02'
Outputs:
  FileSystem:
    Description: EFS Id
    Value: !Ref 'FileSystem'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'FileSystemId' ] ]
  MountTargetSubnetOneId:
    Description: EFS Mount Target Subnet One Id
    Value: !Ref 'MountTargetSubnetOne'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'MountTargetSubnetOneId' ] ]
  MountTargetSubnetOneIp:
    Description: EFS Mount Target Subnet One Ip
    Value: !GetAtt 'MountTargetSubnetOne.IpAddress'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'MountTargetSubnetOneIp' ] ]
  MountTargetSubnetTwoId:
    Description: EFS Mount Target Subnet Two Id
    Value: !Ref 'MountTargetSubnetTwo'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'MountTargetSubnetTwoId' ] ]
  MountTargetSubnetTwoIp:
    Description: EFS Mount Target Subnet Two Ip
    Value: !GetAtt 'MountTargetSubnetTwo.IpAddress'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'MountTargetSubnetTwoIp' ] ]
  AccessPointId:
    Description: EFS Access Point Id
    Value: !Ref 'AccessPointResource'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'AccessPointId' ] ]
  AccessPointBackupId:
    Description: EFS Backup Access Point Id
    Value: !Ref 'AccessPointResourceBackup'
    Export:
      Name: !Join [ ':', [ !Ref 'AWS::StackName', 'AccessPointResourceBackupId' ] ]
